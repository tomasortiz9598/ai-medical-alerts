# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing

import baml_py
import typing_extensions
from pydantic import BaseModel, ConfigDict

from . import types

StreamStateValueT = typing.TypeVar("StreamStateValueT")


class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]


# #########################################################################
# Generated classes (3)
# #########################################################################


class AlertType(BaseModel):
    id: typing.Optional[str] = None
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None


class MedicalAlert(BaseModel):
    type: typing.Optional["AlertType"] = None
    event: typing.Optional[str] = None
    date: typing.Optional[str] = None


class Resume(BaseModel):
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    experience: typing.List[str]
    skills: typing.List[str]


# #########################################################################
# Generated type aliases (0)
# #########################################################################
